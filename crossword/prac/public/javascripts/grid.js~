function buildGrid() {
    for (i=0; i<dimension; i++) {
	blocks.push([]);
	for (j=i*dimension; j<(i*dimension)+dimension; j++) {
	    blocks[i].push(characters.slice(j,j+1));
	}
    }

    for (i=0; i<dimension; i++) {
	cluenums.push([]);
	for (j=0; j<dimension; j++) {
	    if (i===0) {
		if (blocks[i][j] !== " ") {
		    cluenums[i].push(cluenum);
		    cluenum++;
		}
		else {
		    cluenums[i].push("");
		}
	    }
	    else {
		if (j===0 && blocks[i][j] !== " ") {
		    cluenums[i].push(cluenum);
		    cluenum++;
		}
		else if (blocks[i][j-1] === " " && blocks[i][j] !== " ") {
		    cluenums[i].push(cluenum);
		    cluenum++;
		}
		else if (blocks[i-1][j] === " " && blocks[i][j] !== " ") {
		    cluenums[i].push(cluenum);
		    cluenum++;
		}
		else {
		    cluenums[i].push("");
		}
	    }
	}
    }
    //console.log(cluenums);
    var crossword = d3.select("#crossword");
    for (i=0; i<dimension; i++) {
	for (j=0; j<dimension; j++) {
	    var block = crossword.append('g')
		.attr('id', 'r' + i + 'c' + j);
	    var cell = block.append('rect')
		.attr('value',i+j)
		.attr('class','letterbox')
		.attr('x',j*40+1)
		.attr('y',i*40+1)
		.attr('width',40)
		.attr('height',40)
		.attr('style','stroke-width: 1; stroke: rgb(55,55,55); fill: rgb(255,255,255);');
	    if (blocks[i][j]===" ") {
		emptyBlocks--;
		cell.attr('style','stroke-width: 1; stroke: rgb(55,55,55); fill:rgb(0,0,0);')
		    .attr('class','blackbox');
	    }
	    else {
		if (cluenums[i][j] !== "") {
		    block.append('text')
			.attr('x',j*40+4)
			.attr('y',i*40+12)
			.attr('style','fill: black; font-size: 10px;')
			.attr('id','clue' + cluenums[i][j])
			.text(cluenums[i][j]);
		}
	    }
	    block.append('text')
		.attr('class','inputText')
		.attr('x',j*40+20)
		.attr('y',i*40+35)
		.attr('text-anchor','middle')
		.text('')
	    //.text(blocks[i][j])	// debugging: fill in solutions
		.attr('style','fill: black; font-size: 30px;');
	}
    }
